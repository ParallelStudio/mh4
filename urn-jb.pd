#N canvas 69 507 744 512 10;
#X obj 135 20 inlet;
#X obj 272 18 inlet;
#X obj 135 107 cyclone/urn \$1;
#X obj 190 175 ==;
#X obj 135 133 t f f f;
#X obj 190 199 select 1;
#X obj 190 223 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 133 240 +;
#X obj 133 266 % \$1;
#X obj 133 292 outlet;
#X text 346 150 adapted from a max patch by John Bischoff;
#X text 342 6 "When artists want random \, we usually also want to
avoid repetitions \, even though a true random generator produces repetitions
sometimes. For finite sequences \, urn does a pretty good job \, but
when the sequence is looped \, there can be a repeat of the last number
of a series and the first of the next series. The abstraction urn-jb
solves this problem by shifting the new series by one \, if necessary.
You can use urn-jb anywhere you would normally use the random object."
, f 58;
#X msg 159 70 clear \, bang;
#X connect 0 0 2 0;
#X connect 1 0 2 1;
#X connect 2 0 4 0;
#X connect 2 1 12 0;
#X connect 3 0 5 0;
#X connect 4 0 7 0;
#X connect 4 1 3 1;
#X connect 4 2 3 0;
#X connect 5 0 6 0;
#X connect 6 0 7 1;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X connect 12 0 2 0;
